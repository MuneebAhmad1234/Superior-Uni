class Employee:
    def __init__(self, name, age, salary):
        self.__name = name
        self.__age = age
        self.__salary = salary

    def get_name(self):
        return self.__name

    def set_name(self, name):
        self.__name = name

    def get_age(self):
        return self.__age

    def set_age(self, age):
        self.__age = age

    def get_salary(self):
        return self.__salary

    def set_salary(self, salary):
        self.__salary = salary

class Manager(Employee):
    def __init__(self, name, age, salary, department):
        super().__init__(name, age, salary)
        self.__department = department

    def get_department(self):
        return self.__department

    def set_department(self, department):
        self.__department = department

class Worker(Employee):
    def __init__(self, name, age, salary, hours_worked):
        super().__init__(name, age, salary)
        self.__hours_worked = hours_worked

    def get_hours_worked(self):
        return self.__hours_worked

    def set_hours_worked(self, hours_worked):
        self.__hours_worked = hours_worked

class Employee:
    def __init__(self, name, age, salary, department, hours_worked):
        self.name = name
        self.age = age
        self.salary = salary
        self.department = department
        self.hours_worked = hours_worked

import csv

def write_to_csv(file_name, employees):
    with open(file_name, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["Name", "Age", "Salary", "Department", "Hours Worked"])
        for emp in employees:
            writer.writerow([emp.name, emp.age, emp.salary, emp.department, emp.hours_worked])

def read_from_csv(file_name):
    employees = []
    with open(file_name, mode='r') as file:
        reader = csv.reader(file)
        next(reader)  # Skip header
        for row in reader:
            name, age, salary, department, hours_worked = row
            employees.append(Employee(name, int(age), float(salary), department, int(hours_worked)))
    return employees




def add_employee(employee, employees):
    employees.append(employee)

def display_employees(employees):
    for emp in employees:
        print(f"Name: {emp.name}, Age: {emp.age}, Salary: {emp.salary}, Department: {emp.department}, Hours Worked: {emp.hours_worked}")

def update_employee(employee, employees):
    for emp in employees:
        if emp.name == employee.name:
            emp.age = employee.age
            emp.salary = employee.salary
            emp.department = employee.department
            emp.hours_worked = employee.hours_worked

def delete_employee(name, employees):
    employees[:] = [emp for emp in employees if emp.name != name]


employees = []
while True:
    print("\nEmployee Information Management System")
    print("1. Add Employee")
    print("2. Display Employees")
    print("3. Update Employee Information")
    print("4. Delete Employee")
    print("5. Exit")

    choice = input("Enter your choice: ")

    if choice == '1':
        name = input("Enter Name: ")
        age = int(input("Enter Age: "))
        salary = float(input("Enter Salary: "))
        department = input("Enter Department: ")
        hours_worked = int(input("Enter Hours Worked: "))
        new_employee = Employee(name, age, salary, department, hours_worked)
        add_employee(new_employee, employees)
        write_to_csv("employees.csv", employees)

    elif choice == '2':
        employees = read_from_csv("employees.csv")
        display_employees(employees)

    elif choice == '3':
        name = input("Enter Name of Employee to Update: ")
        age = int(input("Enter New Age: "))
        salary = float(input("Enter New Salary: "))
        department = input("Enter New Department: ")
        hours_worked = int(input("Enter New Hours Worked: "))
        updated_employee = Employee(name, age, salary, department, hours_worked)
        update_employee(updated_employee, employees)
        write_to_csv("employees.csv", employees)

    elif choice == '4':
        name = input("Enter Name of Employee to Delete: ")
        delete_employee(name, employees)
        write_to_csv("employees.csv", employees)

    elif choice == '5':
        break

    else:
        print("Invalid choice. Please try again.")
